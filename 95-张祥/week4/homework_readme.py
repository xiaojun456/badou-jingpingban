# week3作业


# 词典；每个词后方存储的是其词频，词频仅为示例，不会用到，也可自行修改
Dict = {"经常": 0.1,
        "经": 0.05,
        "有": 0.1,
        "常": 0.001,
        "有意见": 0.1,
        "歧": 0.001,
        "意见": 0.2,
        "分歧": 0.2,
        "见": 0.05,
        "意": 0.05,
        "见分歧": 0.05,
        "分": 0.1}

# 待切分文本
sentence = "经常有意见分歧"


# 定义递归函数
def backtrack(start, path, sentence, Dict, result):
    n = len(sentence)
    # print("path:",path)
    if start == n:
        result.append(path[:])  # 将当前切分方式的结果加入结果列表
        return
    for end in range(start + 1, n + 1):
        word = sentence[start:end]
        if word in Dict:
            # 如果当前词在字典中，则加入当前切分方式得到的词，并继续切分剩余部分
            path.append(word)
            backtrack(end, path, sentence, Dict, result)
            # 不符合条件的情况时.取消当前的选择
            path.pop()


# 实现全切分函数，输出根据字典能够切分出的所有的切分方式
def all_cut(sentence, Dict):
    result = []
    backtrack(0, [], sentence, Dict, result)
    return result


# 测试
result = all_cut(sentence, Dict)
print(result)
# [
# ['经', '常', '有', '意', '见', '分', '歧'],
# ['经', '常', '有', '意', '见', '分歧'],
# ['经', '常', '有', '意', '见分歧'],
# ['经', '常', '有', '意见', '分', '歧'],
# ['经', '常', '有', '意见', '分歧'],
# ['经', '常', '有意见', '分', '歧'],
# ['经', '常', '有意见', '分歧'],
# ['经常', '有', '意', '见', '分', '歧'],
# ['经常', '有', '意', '见', '分歧'],
# ['经常', '有', '意', '见分歧'],
# ['经常', '有', '意见', '分', '歧'],
# ['经常', '有', '意见', '分歧'],
# ['经常', '有意见', '分', '歧'],
# ['经常', '有意见', '分歧']
# ]


# 目标输出;顺序不重要
target = [
    ['经常', '有意见', '分歧'],
    ['经常', '有意见', '分', '歧'],
    ['经常', '有', '意见', '分歧'],
    ['经常', '有', '意见', '分', '歧'],
    ['经常', '有', '意', '见分歧'],
    ['经常', '有', '意', '见', '分歧'],
    ['经常', '有', '意', '见', '分', '歧'],
    ['经', '常', '有意见', '分歧'],
    ['经', '常', '有意见', '分', '歧'],
    ['经', '常', '有', '意见', '分歧'],
    ['经', '常', '有', '意见', '分', '歧'],
    ['经', '常', '有', '意', '见分歧'],
    ['经', '常', '有', '意', '见', '分歧'],
    ['经', '常', '有', '意', '见', '分', '歧']
]
